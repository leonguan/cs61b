
                                     GRADER

Name of student running submit: James Jia
Login of student running submit: cs61b-xi

Second team member's name: Zeyu Andrew Liu
Second team member's login: cs61b-py

Third team member's name (if any): Matt Miller
Third team member's login: cs61b-fi

IMPORTANT:  Once you've submitted Project 2 once, the same team member should
submit always.  If a different teammate must submit, inform cs61b@cory.eecs of
all the details.  Include a complete list of team members, and let us know
which submission you want graded.

If you've submitted your project once, or even written a substantial amount of
code together, you may not change partners without the permission of the
instructor.
===============================================================================
Does your program compile without errors?
Yes.

Have you tested your program on the machines in the Soda CS 61B lab?
Yes we have via ssh.

Did you successfully implement game tree search?  Did you successfully
implement alpha-beta pruning?  Are there any limitations on it?  What is the
default number of search levels set by the one-parameter MachinePlayer
constructor?
Yes, we did successfully implement game tree search and alpha-beta pruning.
The only limitation is when someone passes in a search depth of less than one
into the constructor.  If let as is, the game tree search would never end.
Thus, I restrict searchDepth to at least 1.
Describe your board evaluation function in some detail.
THIS NEEDS TO BE FINISHED. BLAHBLAHBLAHBLAHBLAH. TRYIN TO MAKE IT AS OBVIOUS AS POSSIBLE THAT
THIS NEEDS TO BE FINISHED. !?!??!?!?!?!<987()*$#()*$()#*()@&(*&(*))
The board evaluation function attempts to find the best opening spaces

Does your MachinePlayer use any special method of choosing the first few moves?
No. The MachinePlayer chooses moves solely based on the "score" given by the eval(int color) method in the Board class.

Is there anything else the graders should know to help them read your project?



Describe the classes, modules, and interfaces you designed before and while you
implemented the project.  Your description should include:
  -  A list of the classes your program uses.
  -  A list of each of the "modules" used in or by MachinePlayer, similar to
     the list in the "Teamwork" section of the README (but hopefully more
     detailed).
  -  For each module, list the class(es) the module is implemented in.
  -  For each module, say which of your team members implemented it.
  -  For each module, describe its interface--specifically, the prototype and
     behavior of each method that is available for external callers (outside
     the module) to call.  Don't include methods that are only meant to be
     called from within the module.

     For each method, provide (1) a method prototype and (2) a complete,
     unambiguous description of the behavior of the method/module.  This
     description should also appear before the method in your code's comments.

You will probably need to change some of your design decisions as you go; be
sure to modify this file to reflect these changes before you submit your
project.  Your design of classes and interfaces with be worth about 10% of your
grade.

------------------List of classes we use----------------------
The list by itself...

player package:
	Best.java
	Board.java
	Chip.java
	Direction.java
	MachinePlayer.java
	Move.java
	Player.java
	Test.java (WE SHOULD REMOVE THIS, RIGHT?)

utils package:
	ArrayList.java
	ChipArrayList.java
	IntegerArrayList.java
	MoveArrayList.java

--------------------Modules-----------------------------